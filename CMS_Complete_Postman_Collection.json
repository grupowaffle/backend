{
  "info": {
    "name": "CMS Not√≠cias - API Completa",
    "description": "Collection completa com todas as APIs do sistema CMS de Not√≠cias - Incluindo Analytics Dashboard, Authors Management, Tags, Public Portal APIs, Engagement Tracking, Two-Factor Authentication, Invitations Management, SEO AI Assistant, Audit & Security e Database Management. Atualizada com corre√ß√µes de rotas de busca e remo√ß√£o da se√ß√£o Featured Content (agora use /articles?isFeatured=true)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "3.1.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8787",
      "type": "string"
    },
    {
      "key": "invite_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "invitation_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "event_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• System Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.user) {",
                  "        pm.environment.set('user_id', response.data.user.id);",
                  "        console.log('User ID saved:', response.data.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"admin123\",\n  \"name\": \"Test Admin\",\n  \"role\": \"admin\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.environment.set('auth_token', response.token);",
                  "        console.log('Token saved:', response.token.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"admin123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/user",
              "host": ["{{base_url}}"],
              "path": ["auth", "user"]
            }
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë• User Management",
      "item": [
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/users?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "users"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('editor_user_id', response.data.id);",
                  "        console.log('Editor User ID saved:', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"editor@test.com\",\n  \"name\": \"Test Editor\",\n  \"role\": \"editor\",\n  \"password\": \"editor123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/users",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "users"]
            }
          },
          "response": []
        },
        {
          "name": "Get User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "users", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"role\": \"editor-chefe\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "users", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/users/me/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "users", "me", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Update My Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Meu Nome Atualizado\",\n  \"bio\": \"Bio atualizada do usu√°rio\",\n  \"timezone\": \"America/Sao_Paulo\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/users/me/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "users", "me", "profile"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìù Articles",
      "item": [
        {
          "name": "List Articles (CMS)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Article",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('article_id', response.data.id);",
                  "        console.log('Article ID saved:', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Artigo de Teste via Postman\",\n  \"slug\": \"artigo-teste-postman\",\n  \"content\": [\n    {\n      \"type\": \"paragraph\",\n      \"content\": \"Este √© um artigo de teste criado via Postman para demonstrar o sistema de workflow editorial.\"\n    },\n    {\n      \"type\": \"paragraph\",\n      \"content\": \"O sistema permite criar, revisar, aprovar e publicar artigos com controle completo de permiss√µes.\"\n    }\n  ],\n  \"excerpt\": \"Artigo de demonstra√ß√£o do sistema editorial\",\n  \"status\": \"draft\",\n  \"tags\": [\"teste\", \"postman\", \"workflow\"]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/articles",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles"]
            }
          },
          "response": []
        },
        {
          "name": "Get Article",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles/{{article_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles", "{{article_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Article",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Artigo Atualizado via Postman\",\n  \"excerpt\": \"Artigo foi atualizado para demonstrar a funcionalidade de edi√ß√£o\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/articles/{{article_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles", "{{article_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Publish Article",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles/{{article_id}}/publish",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles", "{{article_id}}", "publish"]
            }
          },
          "response": []
        },
        {
          "name": "Unpublish Article",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles/{{article_id}}/unpublish",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles", "{{article_id}}", "unpublish"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Article",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles/{{article_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles", "{{article_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "List Articles by Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles?status=draft&page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles"],
              "query": [
                {"key": "status", "value": "draft"},
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Articles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles?search=tecnologia&page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles"],
              "query": [
                {"key": "search", "value": "tecnologia"},
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Featured Articles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles?isFeatured=true&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles"],
              "query": [
                {"key": "isFeatured", "value": "true"},
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Article Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/articles/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "articles", "stats"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÇ Categories",
      "item": [
        {
          "name": "List Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "categories"]
            }
          },
          "response": []
        },
        {
          "name": "Create Category",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('category_id', response.data.id);",
                  "        console.log('Category ID saved:', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Tecnologia\",\n  \"slug\": \"tecnologia\",\n  \"description\": \"Artigos sobre tecnologia e inova√ß√£o\",\n  \"color\": \"#007bff\",\n  \"icon\": \"üíª\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "categories"]
            }
          },
          "response": []
        },
        {
          "name": "Get Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "categories", "{{category_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Category Hierarchy",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/categories/hierarchy",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "categories", "hierarchy"]
            }
          },
          "response": []
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Tecnologia Atualizada\",\n  \"description\": \"Descri√ß√£o atualizada sobre tecnologia\",\n  \"color\": \"#0056b3\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "categories", "{{category_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "categories", "{{category_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Category Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/categories/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "categories", "stats"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üè∑Ô∏è Tags",
      "item": [
        {
          "name": "List Tags",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/tags?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "tags"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Tag",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('tag_id', response.data.id);",
                  "        console.log('Tag ID saved:', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"JavaScript\",\n  \"slug\": \"javascript\",\n  \"color\": \"#f7df1e\",\n  \"description\": \"Artigos sobre JavaScript e desenvolvimento web\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/tags",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "tags"]
            }
          },
          "response": []
        },
        {
          "name": "Get Tag",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/tags/{{tag_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "tags", "{{tag_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Tag",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"JavaScript Atualizado\",\n  \"color\": \"#f0db4f\",\n  \"description\": \"Descri√ß√£o atualizada sobre JavaScript\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/tags/{{tag_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "tags", "{{tag_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Tag",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/tags/{{tag_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "tags", "{{tag_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Search Tags",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/tags/search?q=javascript&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "tags", "search"],
              "query": [
                {"key": "q", "value": "javascript"},
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Tag Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/tags/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "tags", "stats"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üì∑ Media Management",
      "item": [
        {
          "name": "List Media",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/media?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "media"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Upload Media",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('media_id', response.data.id);",
                  "        console.log('Media ID saved:', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "alt",
                  "value": "Imagem de exemplo",
                  "type": "text"
                },
                {
                  "key": "caption",
                  "value": "Legenda da imagem",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/cms/media/upload",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "media", "upload"]
            }
          },
          "response": []
        },
        {
          "name": "Get Media",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/media/{{media_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "media", "{{media_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Media",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"alt\": \"Texto alternativo atualizado\",\n  \"caption\": \"Legenda atualizada\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/media/{{media_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "media", "{{media_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Media",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/media/{{media_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "media", "{{media_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Search Media",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/media/search?q=imagem&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "media", "search"],
              "query": [
                {"key": "q", "value": "imagem"},
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîÑ Workflow Editorial (Epic 6)",
      "item": [
        {
          "name": "Workflow Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/workflow/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "workflow", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "List Articles by Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/workflow/articles?status=all&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "workflow", "articles"],
              "query": [
                {"key": "status", "value": "all"},
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Workflow Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/workflow/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "workflow", "dashboard"]
            }
          },
          "response": []
        },
        {
          "name": "Transition Status",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"articleId\": \"{{article_id}}\",\n  \"toStatus\": \"review\",\n  \"reason\": \"Artigo pronto para revis√£o via Postman\",\n  \"feedback\": \"Todas as informa√ß√µes foram verificadas e o artigo est√° pronto para an√°lise editorial.\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/workflow/transition",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "workflow", "transition"]
            }
          },
          "response": []
        },
        {
          "name": "Article History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/workflow/articles/{{article_id}}/history",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "workflow", "articles", "{{article_id}}", "history"]
            }
          },
          "response": []
        },
        {
          "name": "Available Transitions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/workflow/articles/{{article_id}}/transitions?currentStatus=draft",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "workflow", "articles", "{{article_id}}", "transitions"],
              "query": [
                {"key": "currentStatus", "value": "draft"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Assign Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"articleId\": \"{{article_id}}\",\n  \"assignedToUserId\": \"{{user_id}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/workflow/assign",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "workflow", "assign"]
            }
          },
          "response": []
        },
        {
          "name": "Process Scheduled Publications",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/workflow/process-scheduled",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "workflow", "process-scheduled"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîî Notifications (Epic 6)",
      "item": [
        {
          "name": "List Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", ""],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Unread Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/unread",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "unread"]
            }
          },
          "response": []
        },
        {
          "name": "Unread Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/unread/count",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "unread", "count"]
            }
          },
          "response": []
        },
        {
          "name": "Create Notification",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('notification_id', response.data.id);",
                  "        console.log('Notification ID saved:', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"type\": \"system_alert\",\n  \"title\": \"Teste de Notifica√ß√£o via Postman\",\n  \"message\": \"Esta √© uma notifica√ß√£o de teste criada atrav√©s da API do Postman para demonstrar o sistema de notifica√ß√µes do Epic 6.\",\n  \"priority\": \"medium\",\n  \"data\": {\n    \"source\": \"postman_test\",\n    \"timestamp\": \"2024-09-12T10:00:00Z\"\n  },\n  \"actionUrl\": \"/dashboard\",\n  \"actionText\": \"Ver Dashboard\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", ""]
            }
          },
          "response": []
        },
        {
          "name": "Mark as Read",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/{{notification_id}}/read",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "{{notification_id}}", "read"]
            }
          },
          "response": []
        },
        {
          "name": "Mark All as Read",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/read-all",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "read-all"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Notification",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/{{notification_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "{{notification_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "System Alert",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Alerta do Sistema - Teste Postman\",\n  \"message\": \"Este √© um alerta de sistema enviado via Postman para demonstrar como notifica√ß√µes s√£o enviadas automaticamente para todos os administradores do sistema.\",\n  \"priority\": \"high\",\n  \"data\": {\n    \"test_type\": \"system_alert\",\n    \"created_via\": \"postman\",\n    \"timestamp\": \"2024-09-12T10:15:00Z\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/system-alert",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "system-alert"]
            }
          },
          "response": []
        },
        {
          "name": "Notification Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "Process Reminders",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/process-reminders",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "process-reminders"]
            }
          },
          "response": []
        },
        {
          "name": "Cleanup Old Notifications",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/cleanup?days=30",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "cleanup"],
              "query": [
                {"key": "days", "value": "30"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Notifications Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/notifications/health",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "notifications", "health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìä Dashboard (Epic 6)",
      "item": [
        {
          "name": "User Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", ""]
            }
          },
          "response": []
        },
        {
          "name": "Dashboard Overview (Admin/Editor-Chefe)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/overview",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", "overview"]
            }
          },
          "response": []
        },
        {
          "name": "Editorial Metrics (Admin Only)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/metrics",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", "metrics"]
            }
          },
          "response": []
        },
        {
          "name": "Quick Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/quick-stats",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", "quick-stats"]
            }
          },
          "response": []
        },
        {
          "name": "Recent Activity",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/activity?limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", "activity"],
              "query": [
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Realtime Data",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/realtime",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", "realtime"]
            }
          },
          "response": []
        },
        {
          "name": "Export Data (JSON)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/export?format=json",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", "export"],
              "query": [
                {"key": "format", "value": "json"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Export Data (CSV)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/export?format=csv",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", "export"],
              "query": [
                {"key": "format", "value": "csv"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Dashboard Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/dashboard/health",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "dashboard", "health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üì° BeehIiv Integration",
      "item": [
        {
          "name": "List Publications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/publications",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "publications"]
            }
          },
          "response": []
        },
        {
          "name": "Create Publication",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('publication_id', response.data.id);",
                  "        console.log('Publication ID saved:', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"beehiivId\": \"the-news-test\",\n  \"name\": \"The News Test\",\n  \"slug\": \"the-news-test\",\n  \"apiToken\": \"your-beehiiv-api-token-here\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/publications",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "publications"]
            }
          },
          "response": []
        },
        {
          "name": "Test Connection",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/test/{{publication_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "test", "{{publication_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Test Parser",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/test/{{publication_id}}/parser",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "test", "{{publication_id}}", "parser"]
            }
          },
          "response": []
        },
        {
          "name": "Sync Latest Newsletter",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"publicationId\": \"{{publication_id}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/sync/latest",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "sync", "latest"]
            }
          },
          "response": []
        },
        {
          "name": "Scheduler Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/scheduler/status",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "scheduler", "status"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger Scheduler",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/scheduler/trigger",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "scheduler", "trigger"]
            }
          },
          "response": []
        },
        {
          "name": "Configure Scheduler",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"interval\": 360,\n  \"enabled\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/scheduler/config",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "scheduler", "config"]
            }
          },
          "response": []
        },
        {
          "name": "Start Scheduler",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/scheduler/start",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "scheduler", "start"]
            }
          },
          "response": []
        },
        {
          "name": "Stop Scheduler",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/beehiiv/scheduler/stop",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "beehiiv", "scheduler", "stop"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë• Authors Management",
      "item": [
        {
          "name": "List Authors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/authors?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "authors"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Author",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.environment.set('author_id', response.data.id);",
                  "        console.log('Author ID saved:', response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jo√£o Silva\",\n  \"slug\": \"joao-silva\",\n  \"bio\": \"Jornalista especializado em tecnologia e inova√ß√£o\",\n  \"email\": \"joao@exemplo.com\",\n  \"expertise\": \"Tecnologia, Inova√ß√£o, Startups\",\n  \"location\": \"S√£o Paulo, SP\",\n  \"socialLinks\": {\n    \"twitter\": \"@joaosilva\",\n    \"linkedin\": \"joao-silva\",\n    \"website\": \"https://joaosilva.com\"\n  },\n  \"featuredAuthor\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/authors",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "authors"]
            }
          },
          "response": []
        },
        {
          "name": "Get Author",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/authors/{{author_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "authors", "{{author_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Author",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jo√£o Silva Atualizado\",\n  \"bio\": \"Bio atualizada do autor\",\n  \"expertise\": \"Tecnologia, Inova√ß√£o, Startups, IA\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/authors/{{author_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "authors", "{{author_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Author",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/authors/{{author_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "authors", "{{author_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Author Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/authors/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "authors", "stats"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìä Analytics Dashboard",
      "item": [
        {
          "name": "Dashboard Overview",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/analytics/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "analytics", "dashboard"]
            }
          },
          "response": []
        },
        {
          "name": "Source Comparison",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/analytics/comparison",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "analytics", "comparison"]
            }
          },
          "response": []
        },
        {
          "name": "Top Articles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/analytics/top-articles?limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "analytics", "top-articles"],
              "query": [
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Article Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/analytics/articles/{{analytics_article_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "analytics", "articles", "{{analytics_article_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Daily Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/analytics/daily?days=30",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "analytics", "daily"],
              "query": [
                {"key": "days", "value": "30"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Category Performance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/analytics/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "analytics", "categories"]
            }
          },
          "response": []
        },
        {
          "name": "Author Performance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/analytics/authors",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "analytics", "authors"]
            }
          },
          "response": []
        },
        {
          "name": "Update Article Analytics",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"views\": 150,\n  \"likes\": 25,\n  \"shares\": 8,\n  \"avgTimeOnPage\": 180,\n  \"bounceRate\": 15\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/analytics/articles/{{analytics_article_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "analytics", "articles", "{{analytics_article_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üåê Public APIs - Complete Portal",
      "item": [
        {
          "name": "Public Articles List",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/articles?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Public Articles with Filters",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/articles?category=tecnologia&featured=true&sort=publishedAt&order=desc&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles"],
              "query": [
                {"key": "category", "value": "tecnologia"},
                {"key": "featured", "value": "true"},
                {"key": "sort", "value": "publishedAt"},
                {"key": "order", "value": "desc"},
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Public Article by Slug",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/articles/artigo-de-teste-javascript",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles", "artigo-de-teste-javascript"]
            }
          },
          "response": []
        },
        {
          "name": "Related Articles",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/articles/artigo-de-teste-javascript/related?limit=5",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles", "artigo-de-teste-javascript", "related"],
              "query": [
                {"key": "limit", "value": "5"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Like Article",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/articles/artigo-de-teste-javascript/like",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles", "artigo-de-teste-javascript", "like"]
            }
          },
          "response": []
        },
        {
          "name": "Share Article",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"platform\": \"twitter\",\n  \"url\": \"https://twitter.com/intent/tweet?text=Check out this article!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/public/articles/artigo-de-teste-javascript/share",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles", "artigo-de-teste-javascript", "share"]
            }
          },
          "response": []
        },
        {
          "name": "Track Time on Page",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"seconds\": 120\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/public/articles/artigo-de-teste-javascript/time",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles", "artigo-de-teste-javascript", "time"]
            }
          },
          "response": []
        },
        {
          "name": "Track Bounce",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/articles/artigo-de-teste-javascript/bounce",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles", "artigo-de-teste-javascript", "bounce"]
            }
          },
          "response": []
        },
        {
          "name": "Track Click-through",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"element\": \"read-more-button\",\n  \"url\": \"/articles/related-article\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/public/articles/artigo-de-teste-javascript/click-through",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "articles", "artigo-de-teste-javascript", "click-through"]
            }
          },
          "response": []
        },
        {
          "name": "Public Authors List",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/authors?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "authors"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Public Author by Slug",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/authors/joao-silva",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "authors", "joao-silva"]
            }
          },
          "response": []
        },
        {
          "name": "Author's Articles",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/authors/joao-silva/articles?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "authors", "joao-silva", "articles"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Public Tags List",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/tags?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "tags"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Popular Tags",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/tags/popular?limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "tags", "popular"],
              "query": [
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Public Tag by Slug",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/tags/javascript",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "tags", "javascript"]
            }
          },
          "response": []
        },
        {
          "name": "Tag's Articles",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/tags/javascript/articles?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "tags", "javascript", "articles"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Public Search",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/search?q=tecnologia&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "search"],
              "query": [
                {"key": "q", "value": "tecnologia"},
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Public Categories",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "categories"]
            }
          },
          "response": []
        },
        {
          "name": "RSS Feed - General",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/rss",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "rss"]
            }
          },
          "response": []
        },
        {
          "name": "RSS Feed - Category",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/rss/category/tecnologia",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "rss", "category", "tecnologia"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîê Two-Factor Authentication (2FA)",
      "item": [
        {
          "name": "Get 2FA Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/status",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "status"]
            }
          },
          "response": []
        },
        {
          "name": "Setup 2FA",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"appName\": \"TheNews CMS\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/setup",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "setup"]
            }
          },
          "response": []
        },
        {
          "name": "Enable 2FA",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"verificationCode\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/enable",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "enable"]
            }
          },
          "response": []
        },
        {
          "name": "Verify 2FA Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/verify",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "verify"]
            }
          },
          "response": []
        },
        {
          "name": "Disable 2FA",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"verificationCode\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/disable",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "disable"]
            }
          },
          "response": []
        },
        {
          "name": "Regenerate Backup Codes",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"verificationCode\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/regenerate-backup-codes",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "regenerate-backup-codes"]
            }
          },
          "response": []
        },
        {
          "name": "Reset 2FA (Admin Only)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/reset",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "reset"]
            }
          },
          "response": []
        },
        {
          "name": "Get Time Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/time-info",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "time-info"]
            }
          },
          "response": []
        },
        {
          "name": "Validate Code Format",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/validate-code-format",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "validate-code-format"]
            }
          },
          "response": []
        },
        {
          "name": "2FA Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/2fa/health",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "2fa", "health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìß Invitations Management",
      "item": [
        {
          "name": "List Invitations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/list?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "list"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Invite User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.invitation && response.data.invitation.id) {",
                  "        pm.environment.set('invitation_id', response.data.invitation.id);",
                  "        console.log('Invitation ID saved:', response.data.invitation.id);",
                  "    }",
                  "    if (response.data && response.data.inviteUrl) {",
                  "        const urlParts = response.data.inviteUrl.split('/');",
                  "        const token = urlParts[urlParts.length - 1];",
                  "        pm.environment.set('invite_token', token);",
                  "        console.log('Invite token saved:', token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"novo@exemplo.com\",\n  \"role\": \"editor\",\n  \"permissions\": [\"articles:create\", \"articles:edit\"],\n  \"brandId\": \"brand-123\",\n  \"brandName\": \"Marca Exemplo\",\n  \"message\": \"Bem-vindo √† nossa equipe editorial!\",\n  \"expiresInDays\": 7\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/invite",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "invite"]
            }
          },
          "response": []
        },
        {
          "name": "Get Invitation Details (Public)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/details/{{invite_token}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "details", "{{invite_token}}"]
            }
          },
          "response": []
        },
        {
          "name": "Accept Invitation (Public)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"inviteToken\": \"{{invite_token}}\",\n  \"firstName\": \"Jo√£o\",\n  \"lastName\": \"Silva\",\n  \"password\": \"senha123456\",\n  \"confirmPassword\": \"senha123456\",\n  \"timezone\": \"America/Sao_Paulo\",\n  \"language\": \"pt-BR\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/accept",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "accept"]
            }
          },
          "response": []
        },
        {
          "name": "Revoke Invitation",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/revoke/{{invitation_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "revoke", "{{invitation_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get Onboarding Progress",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/onboarding/progress",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "onboarding", "progress"]
            }
          },
          "response": []
        },
        {
          "name": "Complete Onboarding Step",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stepId\": \"profile-setup\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/onboarding/complete-step",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "onboarding", "complete-step"]
            }
          },
          "response": []
        },
        {
          "name": "Complete Onboarding",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/onboarding/complete",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "onboarding", "complete"]
            }
          },
          "response": []
        },
        {
          "name": "Cleanup Expired Invitations",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/cleanup-expired",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "cleanup-expired"]
            }
          },
          "response": []
        },
        {
          "name": "Resend Invitation",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/resend/{{invitation_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "resend", "{{invitation_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Invitations Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/invitations/health",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "invitations", "health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "ü§ñ SEO AI Assistant",
      "item": [
        {
          "name": "Generate SEO Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Como Aprender JavaScript em 2024\",\n  \"content\": \"JavaScript √© uma das linguagens de programa√ß√£o mais populares do mundo...\",\n  \"excerpt\": \"Guia completo para aprender JavaScript do zero\",\n  \"category\": \"tecnologia\",\n  \"tags\": [\"javascript\", \"programa√ß√£o\", \"web development\"],\n  \"targetAudience\": \"iniciantes em programa√ß√£o\",\n  \"language\": \"pt-BR\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/seo/generate",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "seo", "generate"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîç Audit & Security",
      "item": [
        {
          "name": "List Audit Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/audit/logs?page=1&limit=50",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "logs"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "50"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "List Security Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/audit/security-events?page=1&limit=50",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "security-events"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "50"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Resolve Security Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"resolution\": \"Evento investigado e resolvido. Usu√°rio foi notificado sobre tentativa de acesso suspeita.\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/audit/security-events/{{event_id}}/resolve",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "security-events", "{{event_id}}", "resolve"]
            }
          },
          "response": []
        },
        {
          "name": "Log Security Event",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.eventId) {",
                  "        pm.environment.set('event_id', response.data.eventId);",
                  "        console.log('Event ID saved:', response.data.eventId);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eventType\": \"failed_login_attempt\",\n  \"severity\": \"medium\",\n  \"category\": \"authentication\",\n  \"description\": \"M√∫ltiplas tentativas de login falhadas detectadas\",\n  \"userId\": \"{{user_id}}\",\n  \"userEmail\": \"user@exemplo.com\",\n  \"additionalData\": {\n    \"attempts\": 5,\n    \"ipAddress\": \"192.168.1.100\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/audit/security-events",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "security-events"]
            }
          },
          "response": []
        },
        {
          "name": "Get Audit Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/audit/stats?days=30",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "stats"],
              "query": [
                {"key": "days", "value": "30"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Security Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/audit/security-stats",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "security-stats"]
            }
          },
          "response": []
        },
        {
          "name": "Detect Suspicious Activity",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/audit/suspicious-activity",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "suspicious-activity"]
            }
          },
          "response": []
        },
        {
          "name": "Cleanup Old Logs",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"auditLogsDays\": 90,\n  \"securityEventsDays\": 365\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/cms/audit/cleanup",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "cleanup"]
            }
          },
          "response": []
        },
        {
          "name": "Export Audit Logs (JSON)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/audit/export/logs?format=json",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "export", "logs"],
              "query": [
                {"key": "format", "value": "json"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Export Audit Logs (CSV)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/audit/export/logs?format=csv",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "export", "logs"],
              "query": [
                {"key": "format", "value": "csv"}
              ]
            }
          },
          "response": []
        },
        {
          "name": "Audit Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/audit/health",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "audit", "health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîß Database Management",
      "item": [
        {
          "name": "Create Analytics Table",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/database/create-analytics-table",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "database", "create-analytics-table"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Analytics Table",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/cms/database/verify-analytics-table",
              "host": ["{{base_url}}"],
              "path": ["api", "cms", "database", "verify-analytics-table"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}