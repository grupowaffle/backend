import { getDrizzleClient } from './src/config/db';
import { CategoryRepository } from './src/repositories';
import { generateId } from './src/lib/cuid';

const CATEGORIES = [
  { name: 'Internacional', slug: 'internacional', description: 'Not√≠cias internacionais', icon: 'üåç', color: '#3B82F6' },
  { name: 'Brasil', slug: 'brasil', description: 'Not√≠cias do Brasil', icon: 'üáßüá∑', color: '#16A34A' },
  { name: 'Tecnologia', slug: 'tecnologia', description: 'Artigos sobre tecnologia e inova√ß√£o', icon: 'üíª', color: '#8B5CF6' },
  { name: 'Economia', slug: 'economia', description: 'Not√≠cias de economia e mercado', icon: 'üí∞', color: '#F59E0B' },
  { name: 'Entretenimento', slug: 'entretenimento', description: 'Cultura e entretenimento', icon: 'üé¨', color: '#EC4899' },
  { name: 'Neg√≥cios', slug: 'negocios', description: 'Mundo dos neg√≥cios', icon: 'üíº', color: '#14B8A6' },
  { name: 'Esportes', slug: 'esportes', description: 'Not√≠cias esportivas', icon: '‚öΩ', color: '#EF4444' },
  { name: 'Sa√∫de', slug: 'saude', description: 'Sa√∫de e bem-estar', icon: 'üè•', color: '#10B981' },
  { name: 'Cultura', slug: 'cultura', description: 'Arte e cultura', icon: 'üé≠', color: '#A855F7' },
  { name: 'Patrocinado', slug: 'patrocinado', description: 'Conte√∫do patrocinado', icon: 'üì¢', color: '#F97316' },
  { name: 'Geral', slug: 'geral', description: 'Not√≠cias gerais', icon: 'üì∞', color: '#6B7280' },
];

async function seedCategories() {
  console.log('üå± Iniciando seed de categorias...\n');

  const env = {
    DATABASE_URL: process.env.DATABASE_URL,
  };

  const db = getDrizzleClient(env);
  const categoryRepo = new CategoryRepository(db);

  // Get existing categories
  const existing = await categoryRepo.list();
  const existingSlugs = new Set(existing.map(c => c.slug));

  console.log(`üìã Categorias existentes: ${existing.length}`);
  existing.forEach(cat => {
    console.log(`   - ${cat.name} (${cat.slug})`);
  });

  console.log('\nüîÑ Criando categorias faltantes...\n');

  for (const category of CATEGORIES) {
    if (existingSlugs.has(category.slug)) {
      console.log(`‚è≠Ô∏è  ${category.name} (${category.slug}) - j√° existe`);
      continue;
    }

    try {
      const created = await categoryRepo.create({
        id: generateId(),
        name: category.name,
        slug: category.slug,
        description: category.description,
        icon: category.icon,
        color: category.color,
        isActive: true,
        featuredOnHomepage: false,
        order: 0,
      });

      console.log(`‚úÖ ${category.name} (${category.slug}) - criada com ID: ${created.id}`);
    } catch (error) {
      console.error(`‚ùå Erro ao criar ${category.name}:`, error);
    }
  }

  // Show final list
  const final = await categoryRepo.list();
  console.log(`\n‚úÖ Total de categorias: ${final.length}`);
}

seedCategories()
  .then(() => {
    console.log('\n‚úÖ Seed conclu√≠do!');
    process.exit(0);
  })
  .catch(err => {
    console.error('\n‚ùå Erro no seed:', err);
    process.exit(1);
  });